require('dotenv').config(); // üîπ Cargar variables de entorno desde .env
const mongoose = require('mongoose');
const Tags = require('./server/models/Tags'); // Importamos el modelo de Tag

const MONGO_URI = process.env.MONGODB_URI; // üîπ Obtener la URI de MongoDB desde .env

async function insertTagData() {
  try {
    if (!MONGO_URI) {
      throw new Error("‚ö†Ô∏è No se ha encontrado la variable MONGOD_URI en el archivo .env");
    }

    // üîπ Conectar a la base de datos antes de ejecutar consultas
    await mongoose.connect(MONGO_URI, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });
    console.log("‚úÖ Conectado a la base de datos.");

    // Verificar si los tags ya existen para evitar duplicados
    const existingTags = await Tags.countDocuments();
    
    if (existingTags > 0) {
      console.log("üîπ Los tags ya existen en la base de datos.");
      return;
    }

    // Insertar Tags si no existen
    await Tags.insertMany([
      { name: "Travel", description: "Art√≠culos sobre viajes" },
      { name: "Adventure", description: "Exploraciones y aventuras" },
      { name: "Food", description: "Comida y recetas" },
      { name: "Lifestyle", description: "Consejos de vida" },
      { name: "Business", description: "Noticias de negocios" },
      { name: "Freelancing", description: "Trabajo aut√≥nomo y remoto" }
    ]);

    console.log("‚úÖ Tags insertados correctamente.");
  } catch (error) {
    console.error("‚ùå Error al insertar tags:", error);
  } finally {
    // üîπ Cierra la conexi√≥n despu√©s de la inserci√≥n
    mongoose.connection.close();
  }
}

// Ejecutar la funci√≥n para insertar los tags
insertTagData();
